median_region_pvv(nordeste),
median_region_pvv(centro_oeste),
median_region_pvv(sudeste),
median_region_pvv(sul))
mean_pvv
regional_pvv <- data.frame(
"Regiões " = c('Norte', 'Nordeste', 'Centro Oeste', 'Sudeste', 'Sul')
)
colnames(regional_pvv) <- c('Regiões')
View(regional_pvv)
regional_pvv <- data.frame(
"Regiões " = c('Norte', 'Nordeste', 'Centro Oeste', 'Sudeste', 'Sul'),
"median_pvv" = mean_pvv
)
colnames(regional_pvv) <- c('Regiões')
View(regional_pvv)
colnames(regional_pvv) <- c('Regiões', 'median_pvv')
View(regional_pvv)
ggplot(regional_pvv, aes(x='Regiões', y='median_pvv', fill = 'Regiões')) +
geom_bar(stat = 'identity')
ggplot(regional_pvv, aes(x='Regiões', y='median_pvv', fill = 'Regiões')) +
geom_bar(stat = 'identity')
ggplot(regional_pvv, aes(x=regional_pvv$Regiões, y=regional_pvv$median_pvv, fill = 'Regiões')) +
geom_bar(stat = 'identity')
ggplot(regional_pvv, aes(x=regional_pvv$Regiões, y=regional_pvv$median_pvv, fill = 'Regiões')) +
geom_bar(stat = 'identity')+
coord_flip()
ggplot(regional_pvv, aes(x=regional_pvv$Regiões, y=regional_pvv$median_pvv, fill = `Regiões`)) +
geom_bar(stat = 'identity')+
coord_flip()
ggplot(regional_pvv, aes(x=`Regiões`, y=median_pvv, fill = `Regiões`)) +
geom_bar(stat = 'identity')+
coord_flip()
ggplot(regional_pvv, aes(x=`Regiões`, y=median_pvv, fill = `Regiões`)) +
geom_bar(stat = 'identity')+
coord_flip()+
xlab('% das apurações') +
ylab('Regiões da Federação')
ggplot(regional_pvv, aes(x=`Regiões`, y=median_pvv, fill = `Regiões`)) +
geom_bar(stat = 'identity')+
xlab('% das apurações') +
ylab('Regiões da Federação')
ggplot(regional_pvv, aes(x=`Regiões`, y=median_pvv, fill = `Regiões`)) +
geom_bar(stat = 'identity')+
xlab('% das apurações') +
ylab('Regiões da Federação')
coord_flip()+
# % voto por candidato pvap Federação
pvap_br_1 <- (select(df_primeiro, pvap))[1,1]
coord_flip()
ggplot(regional_pvv, aes(x=`Regiões`, y=median_pvv, fill = `Regiões`)) +
geom_bar(stat = 'identity')+
xlab('% das apurações') +
ylab('Regiões da Federação')
coord_flip()
ggplot(regional_pvv, aes(x=`Regiões`, y=median_pvv, fill = `Regiões`)) +
geom_bar(stat = 'identity')+
xlab('% das apurações') +
ylab('Regiões da Federação')+
coord_flip()
ggplot(regional_pvv, aes(x=`Regiões`, y=median_pvv, fill = `Regiões`)) +
geom_bar(stat = 'identity')+
ylab('% das apurações') +
xlab('Regiões da Federação')+
coord_flip()
ggplot(regional_pvv, aes(x=`Regiões`, y=median_pvv, fill = `Regiões`)) +
geom_bar(stat = 'identity')+
geom_text(aes(label=median_pvv), vjust=1.6, color="white",
position = position_dodge(0.9), size=3.5)
ggplot(regional_pvv, aes(x=`Regiões`, y=median_pvv, fill = `Regiões`)) +
geom_bar(stat = 'identity')+
geom_text(aes(label=median_pvv), vjust=1.6, color="white",
position = position_dodge(0.9), size=3.5)+
ylab('% das apurações') +
xlab('Regiões da Federação')+
coord_flip()
ggplot(regional_pvv, aes(x=`Regiões`, y=median_pvv, fill = `Regiões`)) +
geom_bar(stat = 'identity')+
geom_text(aes(label=median_pvv), vjust=1.6, color="black",
position = position_dodge(0.9), size=3.5)+
ylab('% das apurações') +
xlab('Regiões da Federação')+
coord_flip()
ggplot(regional_pvv, aes(x=`Regiões`, y=median_pvv, fill = `Regiões`)) +
geom_bar(stat = 'identity')+
geom_text(aes(label=paste0(median_pvv,'%')), vjust=1.6, color="black",
position = position_dodge(0.9), size=3.5)+
ylab('% das apurações') +
xlab('Regiões da Federação')+
coord_flip()
ggplot(regional_pvv, aes(x=`Regiões`, y=median_pvv, fill = `Regiões`)) +
geom_bar(stat = 'identity')+
geom_text(aes(label=paste0(median_pvv,'%')), vjust=1.6, color="black",
position = position_dodge(0.9), size=3.5)+
ylab('% das apurações') +
xlab('Regiões da Federação')+
coord_flip()
ggplot(regional_pvv, aes(x=`Regiões`, y=median_pvv, fill = `Regiões`)) +
geom_bar(stat = 'identity')+
geom_text(aes(label=paste0(median_pvv,'%')), vjust=1, color="black",
position = position_dodge(0.9), size=3.5)+
ylab('% das apurações') +
xlab('Regiões da Federação')+
coord_flip()
ggplot(regional_pvv, aes(x=`Regiões`, y=median_pvv, fill = `Regiões`)) +
geom_bar(stat = 'identity')+
geom_text(aes(label=paste0(median_pvv,'%')), vjust=1, color="black",
position = position_dodge(0.9), size=3.5)+
ylab('% das apurações') +
xlab('Regiões da Federação')+
coord_flip()
ggplot(regional_pvv, aes(x=`Regiões`, y=median_pvv, fill = `Regiões`)) +
geom_bar(stat = 'identity')+
geom_text(aes(label=paste0(median_pvv,'%')), vjust=0.8, color="black",
position = position_dodge(0.9), size=3.5)+
ylab('% das apurações') +
xlab('Regiões da Federação')+
coord_flip()
ggplot(regional_pvv, aes(x=`Regiões`, y=median_pvv, fill = `Regiões`)) +
geom_bar(stat = 'identity')+
geom_text(aes(label=paste0(median_pvv,'%')), vjust=0.5, color="black",
position = position_dodge(0.9), size=3.5)+
ylab('% das apurações') +
xlab('Regiões da Federação')+
coord_flip()
ggplot(regional_pvv, aes(x=`Regiões`, y=median_pvv, fill = `Regiões`)) +
geom_bar(stat = 'identity')+
geom_text(aes(label=paste0(median_pvv,'%')), vjust=0.5, color="black",
position = position_dodge(0.5), size=3.5)+
ylab('% das apurações') +
xlab('Regiões da Federação')+
coord_flip()
ggplot(regional_pvv, aes(x=`Regiões`, y=median_pvv, fill = `Regiões`)) +
geom_bar(stat = 'identity')+
geom_text(aes(label=paste0(median_pvv,'%')), vjust=0.5, color="black",
position = position_dodge(1.5), size=3.5)+
ylab('% das apurações') +
xlab('Regiões da Federação')+
coord_flip()
ggplot(regional_pvv, aes(x=`Regiões`, y=median_pvv, fill = `Regiões`)) +
geom_bar(stat = 'identity')+
geom_text(aes(label=paste0(median_pvv,'%')), vjust=0.5, color="black",
position = position_dodge(1), size=3.5)+
ylab('% das apurações') +
xlab('Regiões da Federação')+
coord_flip()
ggplot(regional_pvv, aes(x=`Regiões`, y=median_pvv, fill = `Regiões`)) +
geom_bar(stat = 'identity')+
geom_text(aes(label=paste0(median_pvv,'%')), vjust=0.5, color="black",
position = position_dodge(0.1), size=3.5)+
ylab('% das apurações') +
xlab('Regiões da Federação')+
coord_flip()
ggplot(regional_pvv, aes(x=`Regiões`, y=median_pvv, fill = `Regiões`)) +
geom_bar(stat = 'identity')+
geom_text(aes(label=paste0(median_pvv,'%')), vjust=0.5, color="black",
position = position_dodge(0.9), size=3.5)+
ylab('% das apurações') +
xlab('Regiões da Federação')+
coord_flip()
ggplot(regional_pvv, aes(x=`Regiões`, y=median_pvv, fill = `Regiões`)) +
geom_bar(stat = 'identity')+
geom_text(aes(label=paste0(median_pvv,'%')), vjust=0.5, color="black",
position = position_dodge(0.9), size=5)+
ylab('% das apurações') +
xlab('Regiões da Federação')+
coord_flip()
ggplot(regional_pvv, aes(x=`Regiões`, y=median_pvv, fill = `Regiões`)) +
geom_bar(stat = 'identity')+
geom_text(aes(label=paste0(median_pvv,'%')), vjust=0.5, color="black",
position = position_dodge(0.9), size=6)+
ylab('% das apurações') +
xlab('Regiões da Federação')+
coord_flip()
ggplot(regional_pvv, aes(x=`Regiões`, y=median_pvv, fill = `Regiões`)) +
geom_bar(stat = 'identity')+
geom_text(aes(label=paste0(median_pvv,'%')), vjust=0.5, color="black",
position = position_dodge(0.9), size=6)+
ylab('% das apurações', size=2) +
xlab('Regiões da Federação')+
coord_flip()
plot_pvv <- ggplot(regional_pvv, aes(x=`Regiões`, y=median_pvv, fill = `Regiões`)) +
geom_bar(stat = 'identity')+
geom_text(aes(label=paste0(median_pvv,'%')), vjust=0.5, color="black",
position = position_dodge(0.9), size=6)+
ylab('% das apurações') +
xlab('Regiões da Federação')+
coord_flip()
plot_pvv
plot_pvv
#Importe Pacotes
library(shinydashboard)
#Importe Pacotes
library(shinydashboard)
library(shiny)
library(plotly)
library(shinythemes)
library(dplyr)
library(ggplot2)
# Carrega arquivos
source('processing_data.R')
runApp()
#Importe Pacotes
library(shinydashboard)
library(shiny)
library(plotly)
library(shinythemes)
library(dplyr)
library(ggplot2)
# Carrega arquivos
source('processing_data.R')
source("ui.R")
source("server.R")
# Executa aplicação
shinyApp(ui, server)
runApp()
runApp()
runApp()
library(shiny); runApp('~/Desktop/Estudos/formacao_cientista_dados_academy/Big_Data_Analytics/Cap_10_Estatistica_Parte3/EstudoCaso3.R')
runApp()
library(shiny)
runApp()
runApp()
runApp()
runApp()
runApp()
source('app.R')
source('app.R')
source('app.R')
runApp()
func_teste <- function(){
for (i in 1:10){
print(i)
}
}
delay(5000, func_teste)
if (interactive()) {
library(shiny)
shinyApp(
ui = fluidPage(
useShinyjs(),
p(id = "text", "This text will disappear after 3 seconds"),
actionButton("close", "Close the app in half a second")
),
server = function(input, output) {
delay(3000, hide("text"))
observeEvent(input$close, {
delay(500, stopApp())
})
}
)
}
runApp()
shinyApp(ui, server)
if (interactive()) {
library(shiny)
shinyApp(
ui = fluidPage(
useShinyjs(),
p(id = "text", "This text will disappear after 3 seconds"),
actionButton("close", "Close the app in half a second")
),
server = function(input, output) {
delay(3000, hide("text"))
observeEvent(input$close, {
delay(500, stopApp())
})
}
)
}
shinyApp(ui, server)
# Arquivo para teste de atualização
library(shinyjs)
func_teste <- function(){
for (i in 1:10){
print(i)
}
}
delay(5000, func_teste)
# Arquivo para teste de atualização
library(shinyjs)
library(shiny)
shinyApp(
ui = fluidPage(
useShinyjs(),
p(id = "text", "This text will disappear after 3 seconds"),
actionButton("close", "Close the app in half a second")
),
server = function(input, output) {
delay(3000, hide("text"))
observeEvent(input$close, {
delay(500, stopApp())
})
}
)
runApp()
source('app.R')
source('app.R')
Sys.Date()
Sys.time()
class(Sys.time())
Sys.time()[2]
Sys.time()[1]
Sys.time()[1,2]
Sys.time()
?Sys.time()
format(Sys.time(), "%a %b %d %X %Y")
format(Sys.time(), "%a %b %d %X)
format(Sys.time(), "%a %b %d %X)
format(Sys.time(), "%a %b %d %X)
)
)
)
asd
awsd2qw23e4e21q3
65
____-0_)
casd
asd
as_data_frame()
runApp()
library(shiny)
source('app.R')
source('app.R')
format(Sys.time(), "%a %b %d %X %Y")
format(Sys.time(), "%a %b %d %X ")
format(Sys.time(), " %d %X ")
%a %b
format(Sys.time(), "%a %b %d %X ")
source('app.R')
source('app.R')
source('app.R')
source('app.R')
source('app.R')
source('app.R')
library(shiny); source('app.R')
df_geral()
source('app.R')
df_geral()
source('app.R')
source('app.R')
source('app.R')
source('app.R')
source('app.R')
runApp()
library(shiny); source('app.r')
source('app.r')
source('app.r')
source('app.r')
source('app.r')
source('app.r')
runApp()
source('app.r')
source('func_getdataTSE.R')
source('app.r')
source('app.r')
source('app.r')
source('app.r')
source('app.r')
runApp()
obj1 <- df_geral()
obj1$pvv
length(obj1$pvv)
View(obj1$pvv)
View(obj1)
source('app.r')
source('app.r')
source('func_getdataTSE.r')
source('app.r')
source('app.r')
source('app.r')
source('app.r')
source('app.r')
source('app.r')
source('app.r')
source('app.r')
source('app.r')
source('app.r')
source('app.r')
source('app.r')
source('app.r')
source('app.r')
df_geral
df_primeiro()
df_primeiro
source('app.r')
source('app.r')
source('app.r')
source('app.r')
source('app.r')
source('app.r')
source('app.r')
source('app.r')
source('app.r')
source('app.r')
cat(values)
source('app.r')
out
source('app.r')
source('app.r')
source('app.r')
source('app.r')
out
source('app.r')
source('app.r')
obj1 = 'AAA'
source('app.r')
source('app.r')
runApp()
runApp()
source('app.r')
source('app.r')
source('app.r')
source('app.r')
source('app.r')
source('app.r')
source('app.r')
source('app.r')
source('app.r')
source('app.r')
source('app.r')
source('app.r')
source('app.r')
source('app.r')
runApp()
source('app.r')
source('app.r')
source('app.r')
source('app.r')
source('app.r')
source('app.r')
source('app.r')
source('app.r')
source('app.r')
source('app.r')
source('app.r')
runApp()
source('app.r')
source('app.r')
source('app.r')
source('app.r')
source('app.r')
source('app.r')
source('app.r')
source('app.r')
source('app.r')
source('app.r')
source('app.r')
source('app.r')
source('app.r')
source('app.r')
source('app.r')
# Create teste
df_get_teste <- function(){
df_teste <- read.table('teste.txt')
return(df_teste)
}
obj1 = df_teste()
obj1 = df_get_teste()
obj1
return(df_teste[1])
# Create teste
df_get_teste <- function(){
df_teste <- read.table('teste.txt')
return(df_teste[1])
}
obj1 = df_get_teste()
obj1
source('app.r')
source('app.r')
source('app.r')
source('app.r')
source('app.r')
source('app.r')
library(shiny); source('app.r')
source('app.r')
source('app.r')
source('app.r')
runApp()
source('app.r')
source('app.r')
source('app.r')
source('app.r')
source('app.r')
source('app.r')
source('getdataTSE.r')
source('app.r')
source('plot_pvv.r')
# Carrega dados estados
estados <- read.table('estados.txt', sep = ';', header = T)
source('app.r')
source('app.r')
library(shiny); source('app.r')
source('app.r')
source('app.r')
source('app.r')
source('app.r')
source('app.r')
source('app.r')
source('app.r')
source('app.r')
source('app.r')
source('app.r')
source('app.r')
source('app.r')
source('app.r')
source('app.r')
source('app.r')
source('app.r')
source('app.r')
source('app.r')
library(shiny); source('app.r')
