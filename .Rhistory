df_segundo <- data.frame()
for(link in links) {
data_UF <- httr::GET(link) |> httr::content()
df_geral <- rbind(df_geral, as.data.frame(data_UF)[1,1:64])
for(i in 1:11){
if(data_UF$cand[[i]]$seq =='1'){
df_primeiro <- rbind(df_primeiro, as.data.frame(data_UF$cand[[i]]))
}
if(data_UF$cand[[i]]$seq =='2'){
df_segundo <- rbind(df_segundo, as.data.frame(data_UF$cand[[i]]))
}
}
}
df_list <- list(df_geral, df_primeiro, df_segundo)
return(df_list)
}
# Create a df_geral
df_get_geral <- function(){
df_geral <- getdata_url()
return(df_geral[[1]])
}
# Create a df_primeiro colocado
df_get_primeiro <- function(){
df_primeiro <- getdata_url()
return(df_primeiro[[2]])
}
# Create a df_segundo colocado
df_get_segundo <- function(){
df_segundo <- getdata_url()
return(df_segundo[[3]])
}
source('plot_pvv.r')
source('getdataTSE.r')
df <- df_get_geral()
source('app.r')
deployApp(launch.browser = F, forceUpdate = T )
# Carrega pacote para gerenciamento do deploy no r studio connect
library(rsconnect)
deployApp(launch.browser = F, forceUpdate = T )
deployApp(launch.browser = F, forceUpdate = T )
source('app.r')
source('app.r')
source('app.r')
source('app.r')
source('app.r')
deployApp(launch.browser = F, forceUpdate = T )
deployApp(launch.browser = F, forceUpdate = T )
runApp()
source('app.r')
source('app.r')
source('app.r')
library(scales)
source('app.r')
source('app.r')
source('app.r')
plot_pvv <- ggplot(regional_pvv, aes(x=`Regiões`, y=median_pvv, fill = `Regiões`)) +
geom_bar(stat = 'identity')+
geom_col(position = "fill")+
scale_fill_brewer(palette = "Pastel1")+
scale_y_continuous(labels = scales::percent) +
geom_text(aes(label=paste0(median_pvv,'%')), vjust=0.5, color="black",
position = position_dodge(0.9), size=6)+
ylab('% das apurações') +
xlab('Regiões da Federação')+
coord_flip()
source('app.r')
deployApp(launch.browser = F, forceUpdate = T )
deployApp(launch.browser = F, forceUpdate = T )
source('app.r')
runApp()
library(gcookbook) # Load gcookbook for the cabbage_exp data set
install.packages('gcookbook')
library(gcookbook) # Load gcookbook for the cabbage_exp data set
ggplot(cabbage_exp, aes(x = Date, y = Weight, fill = Cultivar)) +
geom_col(position = "fill")
View(cabbage_exp)
source('app.r')
source('app.r')
source('app.r')
source('app.r')
source('app.r')
source('app.r')
source('app.r')
rep(1,5)
source('app.r')
source('app.r')
source('app.r')
source('app.r')
source('app.r')
source('app.r')
source('app.r')
source('app.r')
round(12.33)
round(12.33, 2)
source('app.r')
source('app.r')
source('app.r')
source('app.r')
source('app.r')
source('app.r')
source('app.r')
source('app.r')
source('app.r')
source('app.r')
source('app.r')
source('app.r')
source('app.r')
obj1 <- df_get_geral()
View(obj1)
source('app.r')
source('app.r')
plot_pvv <- ggplot(regional_pvv, aes(x=Regioes, y=median_pvv, fill = Regioes)) +
geom_bar(stat = 'identity')+
geom_col(position='fill' )+
scale_fill_brewer(palette = "Pastel1")+
geom_text(aes(label=paste0(round(median_pvv, 2),'%')), vjust=0.5, color="black",
position = position_dodge(0.9), size=6)+
ylab('% das apurações') +
xlab('Regiões da Federação')+
coord_flip()
source('app.r')
source('app.r')
source('app.r')
source('app.r')
obj <- df_get_geral()
View(obj)
obj1 <- df_get_primeiro()
View(obj1)
source('app.r')
source('app.r')
source('app.r')
page_regional <- fluidRow(
box(div(class = "my-class", "Div content")),
tags$img(src= textOutput('img1')),
textOutput('img1')
)# FIM
source('app.r')
source('app.r')
source('app.r')
source('app.r')
source('app.r')
source('app.r')
source('app.r')
source('app.r')
source('app.r')
source('app.r')
source('app.r')
source('app.r')
source('app.r')
source('app.r')
source('app.r')
source('app.r')
df_get_geral() -> obj3
View(obj3)
source('app.r')
source('app.r')
source('app.r')
source('app.r')
source('app.r')
source('app.r')
source('app.r')
source('app.r')
source('app.r')
source('app.r')
source('app.r')
source('app.r')
runApp()
source('app.r')
source('app.r')
source('app.r')
source('app.r')
source('app.r')
source('app.r')
source('app.r')
source('app.r')
source('app.r')
source('app.r')
source('app.r')
source('app.r')
source('app.r')
source('app.r')
source('app.r')
source('app.r')
source('app.r')
source('app.r')
source('app.r')
source('app.r')
source('app.r')
source('app.r')
source('app.r')
source('app.r')
source('app.r')
source('app.r')
source('app.r')
source('app.r')
source('app.r')
source('app.r')
source('app.r')
source('app.r')
sessionInfo()
source('app.r')
source('app.r')
deployApp(launch.browser = F, forceUpdate = T )
library(shiny); source('app.r')
library(shiny); source('app.r')
df <- data.frame(c('H.Atualizacao', '% Cand A', '% Cand B'))
df
View(df)
df <- data.frame('H.Atualizacao', '% Cand A', '% Cand B')
View(df)
df <- data.frame()
View(df)
colnames(df) <- c('H.Atualizacao', '%CandA', '%CandB')
obj1 <- df_get_geral()
obj2 <- df_get_primeiro()
obj3 <- df_get_segundo()
obj1$hg
df1 <- as.data.frame(obj1)
View(df1)
select(df1, hg) %>% filter(cdabr == 'br')
select(df1, hg) %>% filter(cdabr == 'br')
select(df1, hg) %>% filter(df1$cdabr == 'br')
select(df1, hg) %>% filter(df1$cdabr == 'br')[1]
(select(df1, hg) %>% filter(df1$cdabr == 'br'))[1]
(select(df1, hg) %>% filter(df1$cdabr == 'br'))[1,1]
df2 <- as.data.frame(obj2)
df3 <- as.data.frame(obj3)
View(df2)
result_candA <-
(select(df2, pvap) %>% filter(df2$))[1,1]
result_candA <-
(select(df2, pvap))[1,1]
result_candA <-
(select(df2, pvap))[1,1]
result_candA <-
select(df2, pvap)
result_candA <-
select(df2, pvap)
df2[pvap]
df2['pvap']
result_candA <-
select(df2, pvap)
select(df2, pvap)
select(df2, pvap)
select(df2, pvap)
select(df2, pvap)[1,1]
nm_cand1 <- select(df2, pvap)[1,1]
result_cand2 <- select(df3, pvap)[1,1]
nm_cand2 <- select(df3, pvap)[1,1]
df_plot_result <- data.frame(
'H.Atualizacao' <- hg,
'% Cand 1' <- result_cand1,
'Nome Cand1' <- nm_cand1,
'% Cand 2' <- result_cand2,
'Nome Cand2' <- nm_cand2
)
# hg -> horário de atualização
hg <- (select(df1, hg) %>% filter(df1$cdabr == 'br'))[1,1]
df_plot_result <- data.frame(
'H.Atualizacao' <- hg,
'% Cand 1' <- result_cand1,
'Nome Cand1' <- nm_cand1,
'% Cand 2' <- result_cand2,
'Nome Cand2' <- nm_cand2
)
result_cand1 <- select(df2, pvap)[1,1]
nm_cand1 <- select(df2, pvap)[1,1]
result_cand2 <- select(df3, pvap)[1,1]
nm_cand2 <- select(df3, pvap)[1,1]
df_plot_result <- data.frame(
'H.Atualizacao' <- hg,
'% Cand 1' <- result_cand1,
'Nome Cand1' <- nm_cand1,
'% Cand 2' <- result_cand2,
'Nome Cand2' <- nm_cand2
)
df_plot_result
View(df_plot_result)
df1 <- as.data.frame(obj1)
df2 <- as.data.frame(obj2)
df3 <- as.data.frame(obj3)
# hg -> horário de atualização
hg <- (select(df1, hg) %>% filter(df1$cdabr == 'br'))[1,1]
result_cand1 <- select(df2, pvap)[1,1]
nm_cand1 <- select(df2, pvap)[1,1]
result_cand2 <- select(df3, pvap)[1,1]
nm_cand2 <- select(df3, pvap)[1,1]
df_plot_result <- data.frame(
'H.Atualizacao' <- hg,
'% Cand 1' <- result_cand1,
'Nome Cand1' <- nm_cand1,
'% Cand 2' <- result_cand2,
'Nome Cand2' <- nm_cand2
)
View(df_plot_result)
result_cand1 <- select(df2, pvap)[1,1]
nm_cand1 <- select(df2, nm)[1,1]
result_cand2 <- select(df3, pvap)[1,1]
nm_cand2 <- select(df3, nm)[1,1]
df_plot_result <- data.frame(
'H.Atualizacao' <- hg,
'% Cand 1' <- result_cand1,
'Nome Cand1' <- nm_cand1,
'% Cand 2' <- result_cand2,
'Nome Cand2' <- nm_cand2
)
View(df_plot_result)
View(df_plot_result)
df_plot_result <- data.frame(
'HAtualizacao' <- hg,
'%Cand1' <- result_cand1,
'NomeCand1' <- nm_cand1,
'%Cand2' <- result_cand2,
'NomeCand2' <- nm_cand2
)
View(df_plot_result)
df_plot_result <- data.frame(
HAtualizacao <- hg,
'%Cand1' <- result_cand1,
'NomeCand1' <- nm_cand1,
'%Cand2' <- result_cand2,
'NomeCand2' <- nm_cand2
)
View(df_plot_result)
View(df_plot_result)
write_csv(df_plot_result, 'results.csv', append= TRUE)
library(readr)
write_csv(df_plot_result, 'results.csv', append= TRUE)
obj1 <- df_get_geral()
obj2 <- df_get_primeiro()
obj3 <- df_get_segundo()
df1 <- as.data.frame(obj1)
df2 <- as.data.frame(obj2)
df3 <- as.data.frame(obj3)
# hg -> horário de atualização
hg <- (select(df1, hg) %>% filter(df1$cdabr == 'br'))[1,1]
result_cand1 <- select(df2, pvap)[1,1]
nm_cand1 <- select(df2, nm)[1,1]
result_cand2 <- select(df3, pvap)[1,1]
nm_cand2 <- select(df3, nm)[1,1]
df_plot_result <- data.frame(
'HAtualizacao' <- hg,
'%Cand1' <- result_cand1,
'NomeCand1' <- nm_cand1,
'%Cand2' <- result_cand2,
'NomeCand2' <- nm_cand2
)
View(df_plot_result)
write_csv(df_plot_result, 'results.csv', append= TRUE)
hg_check <- read_csv('results.csv')
View(hg_check)
hg_check <- read_csv('results.csv', header= F)
hg_check <- read_csv('results.csv', col_names = F)
View(hg_check)
hg_check <- read_csv2('results.csv', col_names = F)
View(hg_check)
hg_check <- read_csv('results.csv', col_names = F)
View(hg_check)
hg_check <- read_csv('results.csv', col_names = F, col_types = NULL)
View(hg_check)
write_csv(df_plot_result, 'results.csv', append= TRUE)
hg_check <- read_csv('results.csv', col_names = F, col_types = NULL)
View(hg_check)
hg_check <- read_csv('results.csv', col_types = NULL)
View(hg_check)
hg_check <- read_csv('results.csv', col_names = F, col_types = NULL)
View(hg_check)
df_plot_result['%cCand1']
colnames(df_plot_result) <- c('Hora_Atualizacao', '%_Cand1', 'Nome_Cand1', '%_Cand2', 'Nome_Cand2')
write_csv(df_plot_result, 'results.csv', append= TRUE)
colnames(df_plot_result) <- c('Hora_Atualizacao', '%_Cand1', 'Nome_Cand1', '%_Cand2', 'Nome_Cand2')
write_csv(df_plot_result, 'results.csv', append= TRUE, col_names = !append)
write_csv(df_plot_result, 'results.csv', append= TRUE, col_names = T)
write_csv(df_plot_result, 'results.csv', append= TRUE, col_names = T)
write_csv(df_plot_result, 'results.csv', append= TRUE, col_names = T & !append)
write_csv(df_plot_result, 'results.csv', append= TRUE, col_names = !append)
write_csv(df_plot_result, 'results.csv', append= TRUE, col_names = append)
write_csv(df_plot_result, 'results.csv', append= TRUE)
write_csv(df_plot_result, 'results.csv', append= TRUE)
write_csv(df_plot_result, 'results.csv', append= TRUE)
write_csv(df_plot_result, 'results.csv', append= TRUE)
hg_check <- read_csv('results.csv', col_names = F)
View(hg_check)
hg_check <- read_csv('results.csv')
View(hg_check)
hg_check <- read_csv('results.csv', sep=',')
View(hg_check)
hg_check <- read_csv('results.csv')
View(hg_check)
View(df_plot_result)
df_plot_result['%_Cand1'] <- as.numeric(df_plot_result['%_Cand1'])
df_plot_result <- data.frame(
'HAtualizacao' <- hg,
'%Cand1' <- result_cand1,
'NomeCand1' <- nm_cand1,
'%Cand2' <- result_cand2,
'NomeCand2' <- nm_cand2
)
%
colnames(df_plot_result) <- c('Hora_Atualizacao', '%_Cand1', 'Nome_Cand1', '%_Cand2', 'Nome_Cand2')
df_plot_result['%_Cand1'] <- sapply(df_plot_result$`%_Cand1`, as.numeric)
df_plot_result <- data.frame(
'HAtualizacao' <- hg,
'%Cand1' <- result_cand1,
'NomeCand1' <- nm_cand1,
'%Cand2' <- result_cand2,
'NomeCand2' <- nm_cand2
)
colnames(df_plot_result) <- c('Hora_Atualizacao', '%_Cand1', 'Nome_Cand1', '%_Cand2', 'Nome_Cand2')
df_plot_result['%_Cand1'] <- sapply(df_plot_result$`%_Cand1`, as.numeric)
View(df_plot_result)
df_plot_result <- data.frame(
'HAtualizacao' <- hg,
'%Cand1' <- result_cand1,
'NomeCand1' <- nm_cand1,
'%Cand2' <- result_cand2,
'NomeCand2' <- nm_cand2
)
colnames(df_plot_result) <- c('Hora_Atualizacao', 'R_Cand1', 'Nome_Cand1', '%_Cand2', 'Nome_Cand2')
df_plot_result['%_Cand1'] <- sapply(df_plot_result$R_Cand1, as.numeric)
colnames(df_plot_result) <- c('Hora_Atualizacao', 'R_Cand1', 'Nome_Cand1', 'R_Cand2', 'Nome_Cand2')
df_plot_result <- data.frame(
'HAtualizacao' <- hg,
'%Cand1' <- result_cand1,
'NomeCand1' <- nm_cand1,
'%Cand2' <- result_cand2,
'NomeCand2' <- nm_cand2
)
colnames(df_plot_result) <- c('Hora_Atualizacao', 'R_Cand1', 'Nome_Cand1', 'R_Cand2', 'Nome_Cand2')
df_plot_result['R_Cand1'] <- sapply(df_plot_result$R_Cand1, as.numeric)
df_plot_result <- data.frame(
'HAtualizacao' <- hg,
'%Cand1' <- result_cand1,
'NomeCand1' <- nm_cand1,
'%Cand2' <- result_cand2,
'NomeCand2' <- nm_cand2
)
colnames(df_plot_result) <- c('Hora_Atualizacao', 'R_Cand1', 'Nome_Cand1', 'R_Cand2', 'Nome_Cand2')
df_plot_result['R_Cand1'] <- gsub(',', '.', df_plot_result$R_Cand1)
df_plot_result['R_Cand1'] <- sapply(df_plot_result$R_Cand1, as.numeric)
View(df_plot_result)
df_plot_result['R_Cand2'] <- gsub(',', '.', df_plot_result$R_Cand2)
df_plot_result['R_Cand2'] <- sapply(df_plot_result$R_Cand2, as.numeric)
View(df_plot_result)
write_csv(df_plot_result, 'results.csv', append= TRUE)
write_csv(df_plot_result, 'results.csv', append= TRUE)
write_csv(df_plot_result, 'results.csv', append= TRUE)
write_csv(df_plot_result, 'results.csv', append= TRUE)
hg_check <- read_csv('results.csv')
View(hg_check)
hg_check <- read_csv('results.csv', col_names = F)
View(hg_check)
if(hg_check$X1 == hg ){
print('passou')
}
hg <- (select(df1, hg) %>% filter(df1$cdabr == 'br'))[1,1]
if(hg_check$X1 == hg ){
print('passou')
}
hg_check$X1
tail(hg_check$X1, n=1)
if(hg_check$X1 == tail(hg_check$X1, n=1) ){
print('passou')
}
hg <- (select(df1, hg) %>% filter(df1$cdabr == 'br'))[1,1]
hg
if(hg_check$X1 == tail(hg_check$X1, n=1)[1,1] ){
print('passou')
}
tail(hg_check$X1, n=1)[1]
tail(hg_check$X1, n=1)[1,1]
tail(hg_check$X1, n=1)[1]
class(tail(hg_check$X1, n=1)[1])
as.character(tail(hg_check$X1, n=1)[1]))
as.character(tail(hg_check$X1, n=1)[1])))
as.character(tail(hg_check$X1, n=1)[1])
as.character(tail(hg_check$X1, n=1))
if(hg_check$X1 == as.character(tail(hg_check$X1, n=1)) ){
print('passou')
}
hg_check$X1
hg
if(hg == as.character(tail(hg_check$X1, n=1)) ){
print('passou')
}
if(hg != as.character(tail(hg_check$X1, n=1)) ){
print('passou')
}
if(hg != as.character(tail(hg_check$X1, n=1)) ){
print('passou')
}
hg_check <- read_csv('results.csv', col_names = F)
View(hg_check)
hg_check <- read_csv('results.csv', col_names = F)
write_csv(df_plot_result, 'results.csv', append= TRUE)
hg_check <- read_csv('results.csv', col_names = F)
View(hg_check)
source('app.r')
source('app.r')
source('app.r')
source('app.r')
source('app.r')
source('app.r')
# Carrega pacote para gerenciamento do deploy no r studio connect
library(rsconnect)
deployApp(launch.browser = F, forceUpdate = T )
source('app.r')
deployApp(launch.browser = F, forceUpdate = T )
library(shiny); source('app.r')
runApp()
runApp()
shiny::runApp()
